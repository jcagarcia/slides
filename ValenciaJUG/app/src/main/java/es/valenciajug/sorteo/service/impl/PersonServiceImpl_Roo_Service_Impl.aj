// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package es.valenciajug.sorteo.service.impl;

import es.valenciajug.sorteo.domain.Person;
import es.valenciajug.sorteo.repository.PersonRepository;
import es.valenciajug.sorteo.service.impl.PersonServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect PersonServiceImpl_Roo_Service_Impl {
    
    declare @type: PersonServiceImpl: @Service;
    
    declare @type: PersonServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private PersonRepository PersonServiceImpl.personRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param personRepository
     */
    @Autowired
    public PersonServiceImpl.new(PersonRepository personRepository) {
        setPersonRepository(personRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return PersonRepository
     */
    public PersonRepository PersonServiceImpl.getPersonRepository() {
        return personRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param personRepository
     */
    public void PersonServiceImpl.setPersonRepository(PersonRepository personRepository) {
        this.personRepository = personRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param person
     */
    @Transactional
    public void PersonServiceImpl.delete(Person person) {
        getPersonRepository().delete(person);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Person> PersonServiceImpl.save(Iterable<Person> entities) {
        return getPersonRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void PersonServiceImpl.delete(Iterable<Long> ids) {
        List<Person> toDelete = getPersonRepository().findAll(ids);
        getPersonRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Person
     */
    @Transactional
    public Person PersonServiceImpl.save(Person entity) {
        return getPersonRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Person
     */
    public Person PersonServiceImpl.findOne(Long id) {
        return getPersonRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Person
     */
    public Person PersonServiceImpl.findOneForUpdate(Long id) {
        return getPersonRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Person> PersonServiceImpl.findAll(Iterable<Long> ids) {
        return getPersonRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Person> PersonServiceImpl.findAll() {
        return getPersonRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long PersonServiceImpl.count() {
        return getPersonRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Person> PersonServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getPersonRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Person> PersonServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getPersonRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Person> PersonServiceImpl.getEntityType() {
        return Person.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> PersonServiceImpl.getIdType() {
        return Long.class;
    }
    
}
